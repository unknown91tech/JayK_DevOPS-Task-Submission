version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nextjs-auth-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nextjs_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: nextjs-auth-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/nextjs_auth
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      NEXT_PUBLIC_API_URL: http://localhost:3000/api
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nextjs-auth-app-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/nextjs_auth
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    profiles:
      - dev

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    container_name: nextjs-auth-migrate
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/nextjs_auth
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./prisma:/app/prisma
    profiles:
      - migrate

volumes:
  postgres_data:
    driver: local
